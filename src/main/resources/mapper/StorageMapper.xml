<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sm.dao.StorageDao">
    <insert id="create" parameterType="Storage" >
        insert into sm_storage (commodity_id, storage_amount, storage_check_at, employee_id, storage_alert)
        value (#{commodityId}, #{storageAmount}, #{storageCheckAt}, #{employeeId}, #{storageAlert})
    </insert>
    <select id="getAllName" resultType="StorageName">
        select a.commodity_id, a.storage_check_at, a.employee_id, a.storage_alert, a.storage_amount,
        b.commodity_name, c.employee_name
         from sm_storage a, sm_commodity b, sm_employees c
         where a.employee_id = c.employee_id and a.commodity_id = b.commodity_id
    </select>
    <select id="querySingle" resultType="Storage">
        select * from sm_storage where commodity_id = #{id}
    </select>
    <select id="getBy" resultType="StorageName" parameterType="Map">
        select a.commodity_id, a.storage_check_at, a.employee_id, a.storage_alert, a.storage_amount,
        b.commodity_name, c.employee_name
         from sm_storage a, sm_commodity b, sm_employees c
         where 1 = 1
         <if test="employeeId != '' ">
             and a.employee_id = #{employeeId}
         </if>
        <if test="beginDate != '' ">
            <if test="endDate != '' ">
                and a.storage_check_at between #{beginDate} and #{endDate}
            </if>
        </if>
        and a.employee_id = c.employee_id and a.commodity_id = b.commodity_id
    </select>
    <update id="update" parameterType="Storage">
        update sm_storage set storage_check_at = #{storageCheckAt}, employee_id = #{employeeId}, storage_alert = #{storageAlert},
        storage_amount = #{storageAmount} where commodity_id = #{commodityId}
    </update>
    <update id="addAmount">
        update sm_storage set storage_amount = storage_amount +  #{amount} where commodity_id = #{id}
    </update>
    <update id="cutAmount">
        update sm_storage set
        storage_amount = storage_amount -  #{amount} where  storage_amount >= #{amount} and
        commodity_id = #{id}
    </update>
</mapper>